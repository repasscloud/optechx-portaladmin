<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/"><img src="/img/logo.svg" /></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @if (showLogin)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="https://optechx-portaladmin.project77.co/login?redirectUri=/">
                    <span class="oi oi-key" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="supportRequests">
                    <span class="oi oi-book" aria-hidden="true"></span> Support Requests
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="https://optechx-portaladmin.project77.co/logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private bool showLogin = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;


            if (!string.IsNullOrEmpty(state?.User?.Identity?.Name))
            {
                showLogin = false;
            }
        }
        await base.OnInitializedAsync();
    }
}
